{"version":3,"sources":["StateProvider.js","Header.js","Firebase.js","SidebarOption.js","Sidebar.js","Message.js","ChatInput.js","Chat.js","Reducer.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","alt","displayName","src","photoURL","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarOption","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","Message","message","timestamp","userImage","Date","toDate","toUTCString","ChatInput","channelId","input","setInput","onChange","e","target","type","preventDefault","FieldValue","serverTimestamp","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","orderBy","actionTypes","state","action","console","log","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kdAEaA,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACzB,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC7CC,IAIII,EAAgB,kBAAMC,qBAAWV,ICoB/BW,MAtBf,WAAmB,IAAD,EACGF,IAATG,EADM,oBACNA,KAER,OAAO,yBAAKC,UAAU,UAClB,yBAAKA,UAAU,gBACX,kBAACC,EAAA,EAAD,CACID,UAAU,iBACVE,IAAG,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAMI,YACXC,IAAG,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMM,WAEf,kBAAE,IAAF,OAEJ,yBAAKL,UAAU,kBACX,kBAAC,IAAD,MACA,2BAAOM,YAAY,YAEvB,yBAAKN,UAAU,iBACX,kBAAC,IAAD,S,oPCXJO,EADcC,IAASC,cAXR,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIMC,YACjBC,EAAOX,IAASW,OAChBC,EAAW,IAAIZ,IAASW,KAAKE,mBAGpBd,ICqBFe,MAnCf,YAA+D,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,iBAChCC,EAAUC,cAoBhB,OACI,yBAAK5B,UAAU,gBAAgB6B,QAASH,EAXzB,WACf,IAAMI,EAAcC,OAAO,iCAEvBD,GACAvB,EAAGyB,WAAW,SAASC,IAAI,CACvBC,KAAMJ,KAbI,WACdL,EACAE,EAAQQ,KAAR,gBAAsBV,IAEtBE,EAAQQ,KAAKX,KAgBZD,GAAQ,kBAACA,EAAD,CAAMvB,UAAU,wBACxBuB,EACG,4BAAKC,GAEL,wBAAIxB,UAAU,0BACV,0BAAMA,UAAU,uBAAhB,OADJ,IACsDwB,KCkCvDY,MAjDf,WAAoB,IAAD,EAEiBC,mBAAS,IAF1B,mBAERC,EAFQ,KAEEC,EAFF,OAGE3C,IAATG,EAHO,oBAGPA,KAcR,OAZAyC,qBAAW,WAEPjC,EAAGyB,WAAW,SAASS,YAAW,SAAAC,GAAQ,OACtCH,EACIG,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CACtBpB,GAAIoB,EAAIpB,GACRS,KAAMW,EAAIC,OAAOZ,eAI9B,IAGC,yBAAKlC,UAAU,WACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,iBACX,4CACA,4BACI,kBAAC,IAAD,MADJ,OAEKD,QAFL,IAEKA,OAFL,EAEKA,EAAMI,cAGf,kBAAC,IAAD,OAEJ,kBAAC,EAAD,CAAeoB,KAAMwB,IAAmBvB,MAAM,YAC9C,kBAAC,EAAD,CAAeD,KAAMyB,IAAWxB,MAAM,yBACtC,kBAAC,EAAD,CAAeD,KAAM0B,IAAYzB,MAAM,gBACvC,kBAAC,EAAD,CAAeD,KAAM2B,IAAoB1B,MAAM,oBAC/C,kBAAC,EAAD,CAAeD,KAAM4B,IAAe3B,MAAM,yBAC1C,kBAAC,EAAD,CAAeD,KAAM6B,IAAU5B,MAAM,SACrC,kBAAC,EAAD,CAAeD,KAAM8B,IAAc7B,MAAM,iBACzC,kBAAC,EAAD,CAAeD,KAAM+B,IAAgB9B,MAAM,cAC3C,6BACA,kBAAC,EAAD,CAAeD,KAAMgC,IAAgB/B,MAAM,aAC3C,6BACA,kBAAC,EAAD,CAAeD,KAAMiC,IAAS9B,kBAAgB,EAACF,MAAM,gBAEpDc,EAASM,KAAI,SAAAa,GAAO,OACjB,kBAAC,EAAD,CAAejC,MAAOiC,EAAQvB,KAAMT,GAAIgC,EAAQhC,U,mDC1CjDiC,OAhBf,YAAyD,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,UAAW7D,EAAkB,EAAlBA,KAAM8D,EAAY,EAAZA,UACxC,OACI,yBAAK7D,UAAU,WACX,yBAAKI,IAAKyD,EAAW3D,IAAI,KACzB,yBAAKF,UAAU,iBACX,gCAAMD,EACF,0BAAMC,UAAU,sBACf,IAAI8D,KAAJ,OAASF,QAAT,IAASA,OAAT,EAASA,EAAWG,UAAUC,gBAGnC,+BAAKL,EAAL,Q,MC4BDM,OAnCf,YAAgD,IAA3BnC,EAA0B,EAA1BA,YAAaoC,EAAa,EAAbA,UAAa,EACnB7B,mBAAS,IADU,mBACtC8B,EADsC,KAC/BC,EAD+B,OAE1BxE,IAAVG,EAFoC,oBAEpCA,KAiBT,OACE,yBAAKC,UAAU,aACb,8BACE,2BACEN,MAAOyE,EACPE,SAAU,SAACC,GAAD,OAAOF,EAASE,EAAEC,OAAO7E,QACnCY,YAAW,mBAAcwB,KAE3B,4BAAQ0C,KAAK,SAAS3C,QAvBR,SAACyC,GACnBA,EAAEG,iBAEEP,GACF3D,EAAGyB,WAAW,SAASa,IAAIqB,GAAWlC,WAAW,YAAYC,IAAI,CAC/D0B,QAASQ,EACTP,UAAWpD,IAASU,UAAUwD,WAAWC,kBACzC5E,KAAMA,EAAKI,YACX0D,UAAW9D,EAAKM,WAIpB+D,EAAS,MAWL,WC6BOQ,OArDf,WAAiB,IACLC,EAAWC,cAAXD,OADI,EAE0BxC,mBAAS,MAFnC,mBAEL0C,EAFK,KAEQC,EAFR,OAG4B3C,mBAAS,IAHrC,mBAGL4C,EAHK,KAGSC,EAHT,KAoBZ,OAfA1C,qBAAU,WACFqC,GACAtE,EAAGyB,WAAW,SAASa,IAAIgC,GAC1BpC,YAAW,SAACC,GAAD,OACRsC,EAAetC,EAASI,WAGhCvC,EAAGyB,WAAW,SAASa,IAAIgC,GAC1B7C,WAAW,YACXmD,QAAQ,YAAY,OACpB1C,YAAW,SAACC,GAAD,OACRwC,EAAgBxC,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,gBAEpD,CAAC+B,IAGA,yBAAK7E,UAAU,QACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,qBAEV,2CAAU+E,QAAV,IAAUA,OAAV,EAAUA,EAAa7C,MACvB,kBAAC,IAAD,QAGR,yBAAKlC,UAAU,qBACX,2BACI,kBAAC,KAAD,MADJ,cAMR,yBAAKA,UAAU,kBACViF,EAAarC,KAAI,gBAAGe,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAW7D,EAAvB,EAAuBA,KAAM8D,EAA7B,EAA6BA,UAA7B,OACd,kBAAC,GAAD,CACIF,QAASA,EACTC,UAAWA,EACX7D,KAAMA,EACN8D,UAAWA,QAKvB,kBAAC,GAAD,CAAW/B,YAAW,OAAEiD,QAAF,IAAEA,OAAF,EAAEA,EAAa7C,KAAMgC,UAAWW,M,kBCrDrDO,GACC,WAiBC9F,GAdC,SAAC+F,EAAMC,GAGnB,OAFAC,QAAQC,IAAIF,GAELA,EAAOd,MACV,KAAKY,GACD,MAAO,CACHC,QACAtF,KAAMuF,EAAOvF,MAEjB,QACI,OAAOsF,ICmBRI,OA9Bf,WAAkB,IAAD,EACa7F,IADb,mBACC8F,GADD,WAkBb,OACI,yBAAK1F,UAAU,SACX,yBAAKA,UAAU,oBACX,yBAAKI,IAAI,0EAA0EF,IAAI,KACvF,uCACA,uDACA,kBAACyF,GAAA,EAAD,CAAQ9D,QArBL,WACXV,EACCyE,gBAAgBxE,GAChByE,MAAK,SAAAC,GACFP,QAAQC,IAAIM,GACZJ,EAAS,CACLlB,KAAMY,GACNrF,KAAM+F,EAAO/F,UAGpBgG,OAAM,SAAAC,GACHC,MAAMD,EAAMrC,cAUR,0B,SCQDuC,OA9Bf,WAAgB,IAAD,EACctG,IADd,mBACLG,EADK,KACLA,KAER,OAHa,KAIX,yBAAKC,UAAU,OACb,kBAAC,KAAD,KACID,EAGA,oCACA,kBAAC,EAAD,MACA,yBAAKC,UAAU,aACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmG,KAAK,iBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,2CAZN,kBAAC,GAAD,SCJUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAepH,aJVS,CACxBQ,KAAM,MISqCT,QAASA,IAClD,kBAAC,GAAD,QAGJsH,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnB,MAAK,SAAAoB,GACJA,EAAaC,gBAEdnB,OAAM,SAAAC,GACLT,QAAQS,MAAMA,EAAMrC,c","file":"static/js/main.b10bc0fe.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React from \"react\"\r\nimport \"./Header.css\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\nfunction Header() {\r\n    const [{user}] = useStateValue();\r\n\r\n    return <div className=\"header\">       \r\n        <div className=\"header__left\">\r\n            <Avatar\r\n                className=\"header__avatar\"\r\n                alt={user?.displayName}\r\n                src={user?.photoURL}\r\n            />\r\n            < AccessTimeIcon />\r\n        </div>\r\n        <div className=\"header__search\">\r\n            <SearchIcon /> \r\n            <input placeholder=\"Search\" />\r\n        </div>\r\n        <div className=\"header__right\">\r\n            <HelpOutlineIcon />\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Header;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAc400eW1ERuSwDTUO-DAhFza93Ax8fW5s\",\r\n    authDomain: \"comm-app-1adc7.firebaseapp.com\",\r\n    databaseURL: \"https://comm-app-1adc7.firebaseio.com\",\r\n    projectId: \"comm-app-1adc7\",\r\n    storageBucket: \"comm-app-1adc7.appspot.com\",\r\n    messagingSenderId: \"981322472228\",\r\n    appId: \"1:981322472228:web:3cee069f32a8e7f0f831b1\",\r\n    measurementId: \"G-EV3VG203Q3\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth, provider};\r\n  export default db; /* specific export for db as used in numerous places */\r\n","import React from 'react'\r\nimport \"./SidebarOption.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport db from './Firebase';\r\n\r\nfunction SidebarOption({ Icon, title, id, addChannelOption }) {\r\n    const history = useHistory();\r\n\r\n    const selectChannel = () => {\r\n        if (id) {\r\n            history.push(`/room/${id}`);\r\n        } else {\r\n            history.push(title);\r\n        }\r\n    };\r\n\r\n    const addChannel = () => {\r\n        const channelName = prompt('Please enter the channel name');\r\n\r\n        if (channelName) {\r\n            db.collection('rooms').add({\r\n                name: channelName,\r\n            })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sidebarOption\" onClick={addChannelOption ? addChannel : selectChannel }>\r\n            {Icon && <Icon className=\"sidebarOption__icon\"/>}           \r\n            {Icon ? (\r\n                <h3>{title}</h3> \r\n            ) : (\r\n                <h3 className=\"sidebarOption__channel\">\r\n                    <span className=\"sidebarOption__hash\"> # </span> {title}\r\n                </h3>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import React, {useState, useEffect} from 'react'\r\nimport \"./Sidebar.css\";\r\nimport FibreManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from  \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport db from './Firebase';\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\nfunction Sidebar() {\r\n\r\n    const [channels, setChannels] = useState([]);\r\n    const [{user}] = useStateValue();\r\n\r\n    useEffect (() => {\r\n        // run this code ONCE when sidebar component loads (due to blank dependency [])\r\n        db.collection('rooms').onSnapshot(snapshot =>(\r\n            setChannels(\r\n                snapshot.docs.map(doc => ({\r\n                    id: doc.id, \r\n                    name: doc.data().name\r\n                }))\r\n                )\r\n        ))\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <div className=\"sidebar__info\">\r\n                    <h2>EMBDeveloper</h2>  \r\n                    <h3>\r\n                        <FibreManualRecordIcon/>\r\n                        {user?.displayName}\r\n                    </h3>\r\n                </div>\r\n                <CreateIcon/>\r\n            </div>   \r\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\r\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & Reactions\" />\r\n            <SidebarOption Icon={DraftsIcon} title=\"Saved Items\" />\r\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel Browser\" />\r\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & User Groups\" />\r\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\r\n            <SidebarOption Icon={FileCopyIcon} title=\"File Browser\" />\r\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show Less\" />\r\n            <hr />\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n            <hr />\r\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\r\n\r\n            {channels.map(channel => (\r\n                <SidebarOption title={channel.name} id={channel.id} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport './Message.css';\r\n\r\nfunction Message({message, timestamp, user, userImage}) {\r\n    return (\r\n        <div className=\"message\">\r\n            <img src={userImage} alt=\"\"/>\r\n            <div className=\"message__info\">\r\n                <h4> {user} \r\n                    <span className=\"message__timestamp\">\r\n                    {new Date(timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </h4>\r\n                <p> {message} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React, { useState } from \"react\";\r\nimport db from \"./Firebase\";\r\nimport \"./ChatInput.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction ChatInput({ channelName, channelId }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [{ user }] = useStateValue();\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (channelId) {\r\n      db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n        message: input,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        user: user.displayName,\r\n        userImage: user.photoURL,\r\n      });\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatInput\">\r\n      <form>\r\n        <input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder={`Message #${channelName}`}\r\n        />\r\n        <button type=\"submit\" onClick={sendMessage}>\r\n          SEND\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatInput;\r\n\r\n","import React, { useState, useEffect } from \"react\"\r\nimport \"./Chat.css\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport db from \"./Firebase\";\r\nimport Message from \"./Message\";\r\nimport ChatInput from \"./ChatInput\";\r\n\r\nfunction Chat() {\r\n    const { roomId } = useParams();\r\n    const [roomDetails, setRoomDetails] = useState(null);\r\n    const [roomMessages, setRoomMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection(\"rooms\").doc(roomId)\r\n            .onSnapshot((snapshot) => \r\n                setRoomDetails(snapshot.data()));\r\n        }\r\n\r\n        db.collection(\"rooms\").doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\",\"asc\")\r\n        .onSnapshot((snapshot) =>\r\n            setRoomMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }, [roomId]);\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <div className=\"chat__headerLeft\">\r\n                    <h4 className=\"chat__channelName\">\r\n                        {/* the ? defaults var to a safe value if not set (TRY catch) */}\r\n                        <strong>#{roomDetails?.name}</strong>  \r\n                        <StarBorderOutlinedIcon />\r\n                    </h4>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <p>\r\n                        <InfoOutlinedIcon /> Details\r\n                    </p>\r\n                </div>  \r\n            </div>\r\n\r\n            <div className=\"chat__messages\">\r\n                {roomMessages.map(({ message, timestamp, user, userImage }) => (\r\n                    <Message\r\n                        message={message}\r\n                        timestamp={timestamp}\r\n                        user={user}\r\n                        userImage={userImage}\r\n                    />\r\n             ))}\r\n      </div>\r\n\r\n            <ChatInput channelName={roomDetails?.name} channelId={roomId} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state,action) => {\r\n    console.log(action);\r\n\r\n    switch(action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                state,\r\n                user: action.user\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react'\r\nimport \"./Login.css\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {auth, provider} from \"./Firebase\";\r\nimport {useStateValue} from \"./StateProvider\";\r\nimport {actionTypes} from \"./Reducer\";\r\n\r\nfunction Login() {\r\n    const [state, dispatch] = useStateValue();\r\n    \r\n    const signIn = () => {\r\n        auth \r\n        .signInWithPopup(provider)\r\n        .then(result => {\r\n            console.log(result);\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            })\r\n        })\r\n        .catch(error => {\r\n            alert(error.message);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://i.pinimg.com/564x/50/4a/c1/504ac1008f40a9f0bc0568cac8132277.jpg\" alt=\"\"/>  \r\n                <h1>Sign in</h1>\r\n                <p>embdeveloper.chatapp.com</p>\r\n                <Button onClick={signIn}>Sign In with Google</Button>\r\n            </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\"; \nimport Chat from \"./Chat\";\nimport Login from \"./Login\";\nimport {useStateValue} from \"./StateProvider\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n          <Header />\n          <div className=\"app__body\">\n            <Sidebar />\n\n            <Switch>\n              <Route path=\"/room/:roomId\">\n                <Chat />\n              </Route>\n              <Route path=\"/\">\n                <h1>Welcome</h1>\n              </Route>\n            </Switch>\n          </div>\n          </>\n        )}\n      </Router>    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, {initialState} from \"./Reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}